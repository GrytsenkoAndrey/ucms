# mkcert -cert-file=uc.local+1.pem -key-file=uc.local+1-key.pem uc.loc www.uc.loc
# .env - DOCKER_PREFIX=i
#

version: "3"
services:

  #redis
  #redis:
  #  image: redis:6.2.0-alpine3.13
  #  container_name: "${DOCKER_PREFIX}-redis"
  #  restart: unless-stopped
  #  networks:
  #    - app-network

  #php
  app:
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
    image: digitalocean.com/php
    container_name: "${DOCKER_PREFIX}-app"
    restart: unless-stopped
    tty: true
    depends_on:
      - db
  #    - redis
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      REDIS_HOST: redis
    working_dir: /var/www
    user: "1000:1000"
    volumes:
      - ./:/var/www
      - ./docker/php-fpm/local.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - app-network

  #mysql
  db:
    image: mysql:8.0.15
    container_name: "${DOCKER_PREFIX}-db"
    restart: unless-stopped
    tty: true
    command:
      --default-authentication-plugin=mysql_native_password
      --performance-schema --secure-file-priv=""
    ports:
      - "30306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./dbdata:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #postgres
  #db:
  #  image: postgres:13.2-alpine
  #  container_name: "${DOCKER_PREFIX}-pgdb"
  #  restart: unless-stopped
  #  environment:
  #    POSTGRES_USER: ${DB_USERNAME}
  #    POSTGRES_PASSWORD: ${DB_PASSWORD}
  #    POSTGRES_DB: ${DB_DATABASE}
  #  volumes:
  #    - ./docker/postgres:/var/lib/postgresql/data
  #  ports:
  #    - "5432:5432"
  #  networks:
  #    - app-network

  #nginx
  webserver:
    image: nginx:1.19.7-alpine
    container_name: "${DOCKER_PREFIX}-server"
    restart: unless-stopped
    tty: true
    depends_on:
      - app
    ports:
      - "8400:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/localssl.conf:/etc/nginx/conf.d/default.conf
      - /home/apg/misc/certs:/etc/ssl
    networks:
      - app-network

#networks
networks:
  app-network:
    driver: bridge
#volumes
volumes:
  dbdata:
    driver: local
